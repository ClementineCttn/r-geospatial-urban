---
title: "Intro to Geospatial Raster Data with R"
author:
  - "Claudiu Forgaci"
  - "Daniele Cannatella"
format: 
  revealjs:
    # logo: assets/img/TUDelft_logo_rgb.png
    # css: logo.css
    # footer: "Data Carpentry for Geospatial Data"
    chalkboard: true
    incremental: true   
    theme: [default, custom.scss]
---


```{r}
#| label: setup
#| include: false

knitr::opts_chunk$set(
  cache = FALSE,
  echo = TRUE,
  message = FALSE,
  warning = FALSE,
  error = FALSE
)

library(tidyverse)
library(terra)
```

```{r echo = FALSE}
DSM_TUD <- rast("../episodes/data/tud-dsm-5m.tif")
DSM_TUD_df <- as.data.frame(DSM_TUD, xy = TRUE)

DTM_TUD <- rast("../episodes/data/tud-dtm-5m.tif")
DTM_TUD_df <- as.data.frame(DTM_TUD, xy = TRUE)

CHM_TUD <- DSM_TUD - DTM_TUD
CHM_TUD_df <- as.data.frame(CHM_TUD, xy = TRUE)

DTM_hill_TUD <- rast("../episodes/data/tud-dtm-5m-hill-WGS84.tif")
DTM_hill_TUD_df <- as.data.frame(DTM_hill_TUD, xy = TRUE)
```

## Outline

1. Intro to raster data
2. Plotting raster data
3. Reprojecting raster data
4. Raster calculations
5. Working with multi-band rasters


# Intro to raster data

## The `terra` package

![A plot showing the green band of an RGB aerial image of the TU Delft library](fig/tudlib-green.png){fig-align="center"}


## Challenge 1: **2 mins**

Use `describe()` to determine the following about the `tud-dsm-5m-hill.tif` file:

1. Does this file have the same CRS as `DSM_TUD`?
2. What is resolution of the raster data?
3. How large would a 5x5 pixel area be on the Earth’s surface?
4. Is the file a multi- or single-band raster?

``` {r}
#| echo: false
#| cache: false
countdown::countdown(minutes = 2)
``` 

## Challenge 1 - Solution {.smaller}

:::: {.columns}

::: {.column}

::: {.nonincremental}

1. Does this file have the same CRS as `DSM_TUD`?
2. What is resolution of the raster data?
3. How large would a 5x5 pixel area be on the Earth’s surface?
4. Is the file a multi- or single-band raster?

:::

:::

::: {.column}

```{r}
# Replace with your own path
describe("../episodes/data/tud-dsm-5m-hill.tif")
```

:::

::::

# Plotting raster data

## Challenge 2: **5 mins**

Create a plot of the TU Delft Digital Surface Model (`DSM_TUD`) that has:

1. Six classified ranges of values (break points) that are evenly divided among the range of pixel values.
2. A plot title.

``` {r}
#| echo: false
#| cache: false
countdown::countdown(minutes = 5)
``` 

## Challenge 2 - Solution

```{r}
DSM_TUD_df <- DSM_TUD_df |>
  mutate(fct_elevation_6 = cut(`tud-dsm-5m`, breaks = 6))

my_col <- terrain.colors(6)

ggplot() +
  geom_raster(data = DSM_TUD_df, aes(
    x = x,
    y = y,
    fill = fct_elevation_6
  )) +
  scale_fill_manual(values = my_col, name = "Elevation") +
  coord_equal() +
  labs(title = "Elevation Classes of the Digital Surface Model (DSM)")
```

# Reprojecting raster data

## Challenge 3: **2 mins**

View the CRS for each of these two datasets. What projection does each use?

``` {r}
#| echo: false
#| cache: false
countdown::countdown(minutes = 2)
``` 

## Challenge 3 - Solution

```{r dtm-crs}
crs(DTM_TUD, parse = TRUE) |> head()
```

```{r hill-crs}
crs(DTM_hill_TUD, parse = TRUE) |> head()
```

`DTM_TUD` is in the Amersfoort / RD New projection, whereas `DTM_hill_TUD` is in WGS 84.

# Raster calculations

## Challenge 4: **10 mins**

It’s often a good idea to explore the range of values in a raster dataset just like we might explore a dataset that we collected in the field.

1. What is the min and max value for the Canopy Height Model `CHM_TUD` that we just created?
3. What is the distribution of all the pixel values in the CHM?
5. Plot the `CHM_TUD` raster using breaks that make sense for the data.

``` {r}
#| echo: false
#| cache: false
countdown::countdown(minutes = 10)
``` 

## Challenge 4 - Solution part 1

```{r chm-challenge-1}
min(CHM_TUD_df$`tud-dsm-5m`, na.rm = TRUE)
max(CHM_TUD_df$`tud-dsm-5m`, na.rm = TRUE)
```

## Challenge 4 - Solution part 2

```{r chm-challenge-2}
ggplot(CHM_TUD_df) +
  geom_histogram(aes(`tud-dsm-5m`))
```

## Challenge 4 - Solution part 3

```{r chm-challenge-3}
custom_bins <- c(-5, 0, 10, 20, 30, 100)
CHM_TUD_df <- CHM_TUD_df |>
  mutate(canopy_discrete = cut(`tud-dsm-5m`, breaks = custom_bins))

ggplot() +
  geom_raster(data = CHM_TUD_df, aes(
    x = x,
    y = y,
    fill = canopy_discrete
  )) +
  scale_fill_manual(values = terrain.colors(5)) +
  coord_quickmap()
```


# Working with multi-band rasters

## Challenge 5: **5 mins**

We can use the `rast()` function to import specific bands in our raster object by specifying which band we want with `lyrs = N` (N represents the band number we want to work with). To import the green band, we would use `lyrs = 2`. We can convert this data to a data frame and plot the same way we plotted the red band.

Import and plot the green band.

``` {r}
#| echo: false
#| cache: false
countdown::countdown(minutes = 5)
``` 

## Challenge 5 - Solution

```{r}
# replace path with your data folder
RGB_band2_TUD <- rast("../episodes/data/tudlib-rgb.tif", lyrs = 2)

RGB_band2_TUD_df <- as.data.frame(RGB_band2_TUD, xy = TRUE)

ggplot() +
  geom_raster(
    data = RGB_band2_TUD_df,
    aes(x = x, y = y, alpha = `tudlib-rgb_2`)
  ) +
  coord_equal()
```
